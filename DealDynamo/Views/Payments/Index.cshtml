@using DealDynamo.Models.Enums
@model DealDynamo.Models.PaymentViewModels.PaymentListViewModel
@{
    ViewData["Title"] = "Payments";
}

<style>
    .sortable:hover {
        cursor: pointer;
        text-decoration: underline;
    }
</style>

<h1>Payments</h1>

<div class="d-flex align-items-center justify-content-start gap-4">
    <div class="form-group">
        <label for="paymentStatusFilter">Filter by Payment Status:</label>
        <select id="paymentStatusFilter" class="form-select">
            <option value="All" selected=@(ViewBag?.PaymentStatusFilter == "All")>All</option>
            @foreach (var status in Enum.GetValues(typeof(PaymentStatusEnum)))
            {
                <option value="@status.ToString()" selected=@(ViewBag?.PaymentStatusFilter == status.ToString())>@status</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="dateSelectFilter" class="control-label">Filter By Date:</label>
        <input class="form-control" id="dateSelectFilter" type="date" value="@ViewBag.DateFilter" />
    </div>
    <div class="form-group">
        <label for="sortPaymentDate" class="control-label">Sort By Date:</label>
        <select id="sortPaymentDate" class="form-select">
            <option value="" selected=@(string.IsNullOrEmpty(ViewBag.SortPaymentDate))>None</option>
            <option value="asc" selected=@(ViewBag?.SortPaymentDate == "asc")>Ascending</option>
            <option value="desc" selected=@(ViewBag?.SortPaymentDate == "desc")>Descending</option>
        </select>
    </div>
</div>

@if (!Model.Payments.Any())
{
    <div class="alert alert-info" role="alert">
        No records found for the selected filters.
    </div>
}
else
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Payment ID</th>
                <th>Order ID</th>
                <th>Amount</th>
                <th>Status</th>
                <th class="sortable" data-sort="paymentDate">Payment Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var payment in Model.Payments)
            {
                <tr>
                    <td>@payment.Id</td>
                    <td>@payment.OrderId</td>
                    <td>@payment.Amount.ToString("C")</td>
                    <td>@payment.Status</td>
                    <td>@payment.PaymentDate?.ToString("g")</td>
                    <td>
                        <a href="@Url.Action("Details", "Payments", new { id = payment.Id })" class="btn btn-info">View</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <nav aria-label="Page navigation">
        <ul class="pagination">
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { currentPage = 1, pageSize = Model.PageSize, paymentStatusFilter = ViewBag?.PaymentStatusFilter, dateFilter = ViewBag.DateFilter, sortPaymentDate = ViewBag.SortPaymentDate })">First</a>
            </li>
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { currentPage = Model.CurrentPage - 1, pageSize = Model.PageSize, paymentStatusFilter = ViewBag?.PaymentStatusFilter, dateFilter = ViewBag.DateFilter, sortPaymentDate = ViewBag.SortPaymentDate })">Previous</a>
            </li>

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { currentPage = i, pageSize = Model.PageSize, paymentStatusFilter = ViewBag?.PaymentStatusFilter, dateFilter = ViewBag.DateFilter, sortPaymentDate = ViewBag.SortPaymentDate })">@i</a>
                </li>
            }

            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { currentPage = Model.CurrentPage + 1, pageSize = Model.PageSize, paymentStatusFilter = ViewBag?.PaymentStatusFilter, dateFilter = ViewBag.DateFilter, sortPaymentDate = ViewBag.SortPaymentDate })">Next</a>
            </li>
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { currentPage = Model.TotalPages, pageSize = Model.PageSize, paymentStatusFilter = ViewBag?.PaymentStatusFilter, dateFilter = ViewBag.DateFilter, sortPaymentDate = ViewBag.SortPaymentDate })">Last</a>
            </li>
        </ul>
    </nav>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#paymentStatusFilter, #dateSelectFilter, #sortPaymentDate').change(function () {
                var paymentStatusFilter = $('#paymentStatusFilter').val();
                var dateFilter = $("#dateSelectFilter").val();
                var sortPaymentDate = $("#sortPaymentDate").val();

                var queryString = $.param({
                    paymentStatusFilter: paymentStatusFilter,
                    dateFilter: dateFilter,
                    sortPaymentDate: sortPaymentDate,
                    currentPage: 1, // Reset to the first page on filter change
                    pageSize: @Model.PageSize
                        });

                window.location.href = '@Url.Action("Index")' + '?' + queryString;
            });
        });
    </script>
}
