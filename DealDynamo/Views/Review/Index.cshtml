@model DealDynamo.Models.ReviewViewModels.ReviewListViewModel

@{
    ViewData["Title"] = "Reviews";
}

<div class="d-flex align-items-center justify-content-between">
    <h1>Reviews</h1>
    <div class="">
        <form id="filterForm" method="get" class="form-inline d-flex align-items-center gap-3">
            <div class="form-group mb-2">
                <label for="buyerNameFilter">Buyer: </label>
                <input type="text" id="buyerNameFilter" name="buyerNameFilter" value="@Model.BuyerNameFilter" class="form-control ml-2" />
            </div>
            <div class="form-group mb-2">
                <label for="productNameFilter">Product: </label>
                <input type="text" id="productNameFilter" name="productNameFilter" value="@Model.ProductNameFilter" class="form-control ml-2" />
            </div>
            <div class="form-group mb-2">
                <label for="ratingFilter">Rating: </label>
                <select id="ratingFilter" name="ratingFilter" class="form-control ml-2">
                    <option value="">All</option>
                    @for (int i = 1; i <= 5; i++)
                    {
                        <option value="@i" selected=@(Model.RatingFilter == i)>@i</option>
                    }
                </select>
            </div>
            <div class="form-group mb-2">
                <label for="dateSubmittedFilter">Date: </label>
                <input type="date" id="dateSubmittedFilter" name="dateSubmittedFilter" value="@(Model.DateSubmittedFilter.HasValue ? Model.DateSubmittedFilter.Value.ToString("yyyy-MM-dd") : "")" class="form-control ml-2" />
            </div>
            <div class="form-group mb-2">
                <button type="submit" class="btn btn-primary ml-2">Filter</button>
            </div>
        </form>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Reviews.FirstOrDefault().Comment)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Reviews.FirstOrDefault().Rating)
            </th>
            <th>
                @Html.ActionLink("Date Submitted", "Index", new { sortBy = "date", isSortAscending = !Model.IsSortAscending, buyerNameFilter = Model.BuyerNameFilter, productNameFilter = Model.ProductNameFilter, ratingFilter = Model.RatingFilter, dateSubmittedFilter = Model.DateSubmittedFilter, currentPage = Model.CurrentPage })
            </th>
            <th>
                @Html.ActionLink("Product", "Index", new { sortBy = "product", isSortAscending = !Model.IsSortAscending, buyerNameFilter = Model.BuyerNameFilter, productNameFilter = Model.ProductNameFilter, ratingFilter = Model.RatingFilter, dateSubmittedFilter = Model.DateSubmittedFilter, currentPage = Model.CurrentPage })
            </th>
            <th>
                @Html.ActionLink("Buyer", "Index", new { sortBy = "buyer", isSortAscending = !Model.IsSortAscending, buyerNameFilter = Model.BuyerNameFilter, productNameFilter = Model.ProductNameFilter, ratingFilter = Model.RatingFilter, dateSubmittedFilter = Model.DateSubmittedFilter, currentPage = Model.CurrentPage })
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Reviews)
    {
        <tr>
            <td style="max-width: 500px; max-height: 200px; overflow: hidden;">
                @Html.DisplayFor(modelItem => item.Comment)
            </td>
            <td>
                @for (int i = 0; i < 5; i++)
                {
                    if (i < item.Rating)
                    {
                        <i class="fa-solid fa-star" style="color: gold;"></i>
                    }
                    else
                    {
                        <i class="fa-solid fa-star"></i>
                    }
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateSubmitted)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Product.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User.UserName)
            </td>
            <td>
                <a class="btn btn-info" asp-action="Details" asp-route-id="@item.ID">Details</a> |
                <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>

<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { currentPage = 1, pageSize = Model.PageSize, categoryFilter = ViewBag.CategoryFilter, sortOrder = ViewBag.SortOrder })">First</a>
        </li>
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { currentPage = Model.CurrentPage - 1, pageSize = Model.PageSize, categoryFilter = ViewBag.CategoryFilter, sortOrder = ViewBag.SortOrder })">Previous</a>
        </li>

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { currentPage = i, pageSize = Model.PageSize, categoryFilter = ViewBag.CategoryFilter, sortOrder = ViewBag.SortOrder })">@i</a>
            </li>
        }

        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { currentPage = Model.CurrentPage + 1, pageSize = Model.PageSize, categoryFilter = ViewBag.CategoryFilter, sortOrder = ViewBag.SortOrder })">Next</a>
        </li>
        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { currentPage = Model.TotalPages, pageSize = Model.PageSize, categoryFilter = ViewBag.CategoryFilter, sortOrder = ViewBag.SortOrder })">Last</a>
        </li>
    </ul>
</nav>



@section Scripts {
    <script>
        $(document).ready(function () {
            $('#filterForm select, #filterForm input').change(function () {
                $('#filterForm').submit();
            });
        });
    </script>
}
