@using DealDynamo.Models.Enums
@model DealDynamo.Models.Order

@{
    ViewData["Title"] = "Order Details";
}


<div class="container">
    <div class="d-flex align-items-start gap-4">
        <div class="col-6">
            <h4>View Order Details</h4>
            <div class="rounded border p-2">
                <div class="d-flex align-items-center justify-content-between">
                    <span>Order Date</span>
                    <span>@Model?.OrderDate?.ToString("dd-MM-yyyy")</span>
                </div>
                <div class="d-flex align-items-center justify-content-between">
                    <span>Order Number</span>
                    <span>@Model?.Id</span>
                </div>
                <div class="d-flex align-items-center justify-content-between">
                    <span>Order Total</span>
                    <span>$@Model?.TotalPrice<span>
                </div>

                <div class="d-flex align-items-center justify-content-between">
                    <span>Delivering To</span>
                    <span>@Model?.Buyer?.UserName<span>
                </div>
            </div>
            <br/>
            <h4>Shipping Details</h4>
            <div class="rounded border p-2">
                <div class="d-flex align-items-center justify-content-between">
                    <span>Shipping Date</span>
                    <span>@if (Model?.ShippingDate != null) {
                            @Html.ValueFor(model => model.ShippingDate)
                        } else
                        {
                            <text>Will be Updated Soon.</text>
                        }
                    </span>
                </div>
                <div class="d-flex align-items-center justify-content-between">
                    <span>Shipping Address</span>
                    <span>@Model?.Address?.HouseNumber @Model?.Address?.Street @Model?.Address?.City, @Model?.Address?.Country</span>
                </div>
                <div class="d-flex align-items-center justify-content-between">
                    <span>Shipping Status</span>
                    <span>@Model?.OrderStatus<span>
                </div>
            </div>
            <br/>
            <h4>Payment Details</h4>
            <div class="rounded border p-2">
                @if(Model.Payment != null)
                {
                    <div class="d-flex align-items-center justify-content-between">
                        <span>Payment Date</span>
                        <span>@if (Model?.Payment?.PaymentDate != null) 
                            {
                                @Model?.Payment?.PaymentDate?.ToString("dd-MM-yyyy")
                            } else
                            {
                                <text>Will be Updated Soon.</text>
                            }
                        </span>
                    </div>
                    <div class="d-flex align-items-center justify-content-between">
                        <span>Billing Address</span>
                        <span>@Model?.Address?.HouseNumber @Model?.Address?.Street @Model?.Address?.City, @Model?.Address?.Country</span>
                    </div>
                    <div class="d-flex align-items-center justify-content-between">
                        <span>Payment Status</span>
                        <span>@Model?.Payment?.Status<span>
                    </div>
                    <div class="d-flex align-items-center justify-content-between">
                        <span>Amount Payed</span>
                        <span>$@Model?.Payment.Amount<span>
                    </div>
                } else
                {
                    <p>No Payment Details.</p>
                }
            </div>
            <div class="mt-4">
                <a class="btn btn-primary" asp-action="Index">Back to List</a>
            </div>
        </div>
        <table class="table table-bordered table-striped">
            <thead>
                <th class="position-sticky top-0">Order Items</th>
            </thead>
            <tbody>
                @foreach (var item in Model.OrderItems)
                {
                    <tr>
                        <td class="d-flex align-items-start gap-3">
                            <img src="~/images/@item.Product.ProductImage" alt="@item.Product.Title" width="100" height="100" />
                            <span>
                                <h5>@item?.Product?.Title</h5>
                                <ul>
                                    <li>Quantity: @item.Quantity</li>
                                    <li>Price: $@item?.Product?.Price</li>
                                    <li>Sub-Total Price: $@(item?.Product?.Price * item.Quantity)</li>
                                    <li>Status: 
                                        @if(User.IsInRole("Seller") && item.Status != OrderItemStatus.Delivered)
                                        {
                                            
                                        <form method="post" asp-action="UpdateStatus" asp-controller="Orders">
                                            <select class="form-select" name="status" onchange="this.form.submit()">
                                                @foreach (OrderItemStatus status in Enum.GetValues(typeof(OrderItemStatus)))
                                                {
                                                    if(status == OrderItemStatus.Cancelled) { continue; }
                                                    <option class="form-option" value="@status" selected=@(status == item.Status)>@status</option>
                                                }
                                            </select>
                                            <input type="hidden" name="orderItemId" value="@item.Id" />
                                            </form>
                                        } else
                                        {
                                            <text>@item.Status</text>
                                        }
                                    </li>
                                </ul>
                            </span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

