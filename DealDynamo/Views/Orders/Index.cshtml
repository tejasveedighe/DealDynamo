@model DealDynamo.Models.OrderViewModels.OrderListViewModel
@using DealDynamo.Models.Enums
@using System.Linq

@{
    ViewData["Title"] = "Orders";
}

<style>
    .sortable:hover {
        cursor: pointer;
        text-decoration: underline;
    }
</style>
<h1>Orders</h1>

<div class="d-flex align-items-center justify-content-evenly">
    <div class="form-group">
        <label for="orderStatusFilter">Filter by Order Status:</label>
        <select id="orderStatusFilter" class="form-select">
            <option selected=@(ViewBag.OrderStatusFilter == "All") value="All">All</option>
            @foreach (var status in Enum.GetValues(typeof(OrderStatusEnum)).Cast<OrderStatusEnum>())
            {
                <option value="@status" selected=@(ViewBag.OrderStatusFilter == status.ToString())>@status</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="paymentStatusFilter">Filter by Payment Status:</label>
        <select id="paymentStatusFilter" class="form-select">
            <option value="All">All</option>
            @foreach (var status in Enum.GetValues(typeof(PaymentStatusEnum)))
            {
                <option value="@status" selected=@(ViewBag.PaymentStatusFilter == status.ToString())>@status</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="sortOrderDate">Sort by Order Date:</label>
        <select id="sortOrderDate" class="form-select">
            <option value="asc" selected=@(ViewBag.SortOrderDate == "asc" )>Ascending</option>
            <option value="desc" selected=@(ViewBag.SortOrderDate == "desc")>Descending</option>
        </select>
    </div>
</div>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Order ID</th>
            <th>Buyer</th>
            <th>Total Price</th>
            <th class="sortable" data-sort="asc" id="orderDateHeader">Order Date</th>
            <th>Order Status</th>
            <th>Payment Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="orderTableBody">
        @foreach (var order in Model.Orders)
        {
            <tr>
                <td>@order.Id</td>
                <td>@order?.Buyer?.UserName</td>
                <td>₹@order.TotalPrice</td>
                <td data-order-date="@order.OrderDate?.ToString("yyyy-MM-dd")">@order.OrderDate?.ToString("dd-MM-yyyy")</td>
                <td>@order.OrderStatus</td>
                <td>@order?.Payment?.Status</td>
                <td>
                    <a href="@Url.Action("Details", "Orders", new { id = order.Id })" class="btn btn-info">View</a>
                    <a href="@Url.Action("Delete", "Orders", new { id = order.Id })" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { currentPage = 1, pageSize = Model.PageSize, orderStatusFilter = ViewBag.OrderStatusFilter, paymentStatusFilter = ViewBag.PaymentStatusFilter, sortOrderDate = ViewBag.SortOrderDate })">First</a>
        </li>
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { currentPage = Model.CurrentPage - 1, pageSize = Model.PageSize, orderStatusFilter = ViewBag.OrderStatusFilter, paymentStatusFilter = ViewBag.PaymentStatusFilter, sortOrderDate = ViewBag.SortOrderDate })">Previous</a>
        </li>

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { currentPage = i, pageSize = Model.PageSize, orderStatusFilter = ViewBag.OrderStatusFilter, paymentStatusFilter = ViewBag.PaymentStatusFilter, sortOrderDate = ViewBag.SortOrderDate })">@i</a>
            </li>
        }

        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { currentPage = Model.CurrentPage + 1, pageSize = Model.PageSize, orderStatusFilter = ViewBag.OrderStatusFilter, paymentStatusFilter = ViewBag.PaymentStatusFilter, sortOrderDate = ViewBag.SortOrderDate })">Next</a>
        </li>
        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { currentPage = Model.TotalPages, pageSize = Model.PageSize, orderStatusFilter = ViewBag.OrderStatusFilter, paymentStatusFilter = ViewBag.PaymentStatusFilter, sortOrderDate = ViewBag.SortOrderDate })">Last</a>
        </li>
    </ul>
</nav>

@section Scripts {
<script>
    $(document).ready(function () {
        $('#orderStatusFilter, #paymentStatusFilter, #sortOrderDate').change(function () {
            var orderStatusFilter = $('#orderStatusFilter').val();
            var paymentStatusFilter = $('#paymentStatusFilter').val();
            var sortOrderDate = $('#sortOrderDate').val();

            var queryString = $.param({
                orderStatusFilter: orderStatusFilter,
                paymentStatusFilter: paymentStatusFilter,
                sortOrderDate: sortOrderDate,
                currentPage: 1, // Reset to the first page on filter change
                pageSize: @Model.PageSize
            });

            window.location.href = '@Url.Action("Index")' + '?' + queryString;
        });
    });
</script>
}
