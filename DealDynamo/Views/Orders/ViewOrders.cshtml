@model DealDynamo.Models.OrderViewModels.OrderListViewModel

@{
    ViewData["Title"] = "Your Orders";
}

<div class="container">
    <h1>Your Orders</h1>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Total Price
                </th>
                <th>
                    Payment Status
                </th>
                <th>
                    Order Status
                </th>
                <th>
                    Order Date
                </th>
                <th>
                    Delivery Date
                </th>
                <th>
                    Shipping Address
                </th>
                <th>
                   Action
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in Model.Orders)
            {
                <tr>
                    <td>₹@order.TotalPrice</td>
                    <td>@order?.Payment?.Status</td>
                    <td>@order.OrderStatus</td>
                    <td>@order.OrderDate?.ToString("dd-MM-yyyy")</td>
                    <td>@if (order.ShippingDate != null)
                        {
                            order.ShippingDate?.ToString("dd-MM-yyyy");
                        } else
                        {
                            <text>Will be Updated Soon.</text>
                        }
                        </td>
                        <td>@order.Address.HouseNumber @order.Address.Street @order.Address.City @order.Address.Country @order.Address.PostalCode</td>
                    <td>
                        <a asp-action="OrderDetails" asp-route-id="@order.Id" class="btn btn-info">View</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <nav aria-label="Page navigation">
        <ul class="pagination">
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { currentPage = 1, pageSize = Model.PageSize })">First</a>
            </li>
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { currentPage = Model.CurrentPage - 1, pageSize = Model.PageSize })">Previous</a>
            </li>

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { currentPage = i, pageSize = Model.PageSize })">@i</a>
                </li>
            }

            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { currentPage = Model.CurrentPage + 1, pageSize = Model.PageSize })">Next</a>
            </li>
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { currentPage = Model.TotalPages, pageSize = Model.PageSize })">Last</a>
            </li>
        </ul>
    </nav>

</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
