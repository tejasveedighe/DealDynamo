@model DealDynamo.Models.CategoryViewModels.CategoryListViewModel

@{
    ViewData["Title"] = "Categories";
}

<div class="d-flex align-items-center justify-content-between">
    <div class="d-flex align-items-center justify-content-center gap-4">
        <h1>Categories</h1>
        <a class="btn btn-success" asp-action="Create">Create New</a>
    </div>
    <input type="text" id="searchBox" placeholder="Search category..." class="form-control col-md-3" />
</div>

@if(Model.Categories.Any())
{
    
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Categories.First().Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Categories.First().Description)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Categories)
        {
            <tr class="category-item">
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    <a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    <a class="btn btn-info" asp-action="Details" asp-route-id="@item.Id">Details</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = 1, searchString = ViewData["SearchString"] })">First</a>
        </li>
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1, searchString = ViewData["SearchString"] })">Previous</a>
        </li>

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = i, searchString = ViewData["SearchString"] })">@i</a>
            </li>
        }

        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1, searchString = ViewData["SearchString"] })">Next</a>
        </li>
        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = Model.TotalPages, searchString = ViewData["SearchString"] })">Last</a>
        </li>
    </ul>
    </nav>
} else
{
    <div class="alert alert-info" role="alert">
        No records found for the selected filters.
    </div>

}

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#searchBox').on('input', function () {
                var searchText = $(this).val().toLowerCase();
                $('.category-item').each(function () {
                    var categoryId = $(this).find('td:first').text().toLowerCase();
                    $(this).toggle(categoryId.includes(searchText));
                });
            });
        });
    </script>
}

