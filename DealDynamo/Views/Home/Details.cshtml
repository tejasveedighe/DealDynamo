@using DealDynamo.Areas.Identity.Data
@using DealDynamo.Services
@using Microsoft.AspNetCore.Identity

@model DealDynamo.Models.Product

@inject UserManager<ApplicationUser> _userManager;
@inject ICategoryRepository _categoryRepository;

@{
    ViewData["Title"] = "Details";
    string userId = _userManager.GetUserId(User);
}

<h1>Product Details</h1>

<hr />
<div>
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Quantity)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Quantity)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ProductImage)
        </dt>
        <dd class = "col-sm-10">
            <img src="~/images/@Model?.ProductImage" width="200"/>
        </dd>
        <dt class = "col-sm-2">
            Category
        </dt>
        <dd class = "col-sm-10">
            @_categoryRepository.GetCategoryById(Model.CategoryID).Title
        </dd>
        <dt class = "col-sm-2">
            Seller
        </dt>
        <dd class = "col-sm-10">
            @_userManager.FindByIdAsync(Convert.ToString(Model.SellerID)).GetAwaiter().GetResult().UserName
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
    </dl>
</div>

<hr/>
<div>
    @foreach(var review in Model.ProductReviews)
    {
        <div class="review">
            <h5>Review by: @review.User?.UserName</h5>
            <p>Rating: @review.Rating out of 5 stars</p>
            <p>Comment: @review.Comment</p>
            <p>Date Submitted: @review.DateSubmitted.ToString("g")</p>
            @if(userId == review.User.Id)
            {
                <a asp-controller="Review" asp-action="Edit" asp-route-id="@Model.Id">Edit Review</a>
            }
        </div>
        <hr />
    }
</div>

<div>
    @if(Model.Quantity > 0)
    {
        <a asp-controller="Cart" asp-action="AddToCart" asp-route-id="@Model?.Id">Add To Cart</a>
    } else
    {
        <span class="badge text-bg-danger">Sold Out</span>
    }
    |
    @if(User.IsInRole("Buyer"))
    {
        <a asp-action="AddReview" asp-controller="Review" asp-route-productId="@Model?.Id">Add Review</a> <text>|</text>
    }
    <a asp-action="Index">Back to List</a>
</div>
