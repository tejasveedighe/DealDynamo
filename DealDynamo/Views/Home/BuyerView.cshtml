@model DealDynamo.Models.ProductViewModels.ProductCardListViewModel

@{
    ViewData["Title"] = "Products";
    var categories = ViewBag.Categories as List<DealDynamo.Models.Category>;
}

<h1>Products</h1>

<div class="search-filter-sort d-flex gap-2 mb-3">
    <input type="text" id="searchBox" placeholder="Search products..." class="form-control" value="@Model.SearchText" />
    <select id="categoryFilter" class="form-control">
        <option value="">All Categories</option>
        @foreach (var category in categories)
        {
            <option value="@category.Id" selected=@(Model.CategoryFilter == category.Id)>@category.Title</option>
        }
    </select>
    <select id="sortOptions" class="form-control">
        <option value="name" selected=@(Model.SortOption == "name")>Sort by Name</option>
        <option value="price" selected=@(Model.SortOption == "price")>Sort by Price</option>
    </select>
    <button id="applyFilters" class="btn btn-primary">Apply</button>
</div>

@if(Model.Products.Any())
{
    

<div id="productsList" class="product-cards row">
    @foreach (var item in Model.Products)
    {
        <div data-product-id="@item.Id" data-category-id="@item.CategoryID" style="width: 18rem" class="product-item col-md-2 col align-self-start card mb-4 shadow-sm block">
            <a asp-action="Details" asp-route-id="@item.Id">
                <img class="card-img-top ratio ratio-1x1" height="300" src="~/images/@item.ProductImage" alt="@item.Title" />
            </a>
            <div class="card-body">
                <h3 class="card-title">@item.Title</h3>
                <p class="card-text">Price: $@item.Price</p>
                <span class="badge text-white bg-primary">
                    @categories.FirstOrDefault(x => x.Id == item.CategoryID)?.Title
                </span>
                <hr>
                <a asp-controller="Home" asp-action="Details" asp-route-id="@item.Id">View Details</a>
                    @if(item.Quantity > 0)
                    {
                        <a class="text-warning float-right" asp-controller="Cart" asp-action="AddToCart" asp-route-id="@item.Id">Add To Cart</a>
                    } else
                    {
                        <span class="badge text-bg-danger float-right">Out of Stock</span>
                    }
            </div>
        </div>
    }
</div>

<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { searchText = Model.SearchText, categoryFilter = Model.CategoryFilter, sortOption = Model.SortOption, currentPage = 1, pageSize = Model.PageSize })">First</a>
        </li>
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { searchText = Model.SearchText, categoryFilter = Model.CategoryFilter, sortOption = Model.SortOption, currentPage = Model.CurrentPage - 1, pageSize = Model.PageSize })">Previous</a>
        </li>

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { searchText = Model.SearchText, categoryFilter = Model.CategoryFilter, sortOption = Model.SortOption, currentPage = i, pageSize = Model.PageSize })">@i</a>
            </li>
        }

        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { searchText = Model.SearchText, categoryFilter = Model.CategoryFilter, sortOption = Model.SortOption, currentPage = Model.CurrentPage + 1, pageSize = Model.PageSize })">Next</a>
        </li>
        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { searchText = Model.SearchText, categoryFilter = Model.CategoryFilter, sortOption = Model.SortOption, currentPage = Model.TotalPages, pageSize = Model.PageSize })">Last</a>
        </li>
    </ul>
    </nav>
} else
{
    <div class="alert alert-info" role="alert">
        No records found for the selected filters.
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#applyFilters').on('click', function () {
                var searchText = $('#searchBox').val();
                var categoryFilter = $('#categoryFilter').val();
                var sortOption = $('#sortOptions').val();
                var url = '@Url.Action("Index")' + '?searchText=' + searchText + '&categoryFilter=' + categoryFilter + '&sortOption=' + sortOption;
                window.location.href = url;
            });
        });
    </script>
}
